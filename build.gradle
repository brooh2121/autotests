plugins {
	id 'org.springframework.boot' version '2.6.3'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id'io.qameta.allure' version '2.9.6' // ранее была версия 2.9.6
}

group = 'com.dismas'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'
def cucumberVersion = '7.2.3'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation 'com.codeborne:selenide:5.6.1'
	testImplementation "io.cucumber:cucumber-java:${cucumberVersion}"
	testImplementation "io.cucumber:cucumber-junit:${cucumberVersion}"
	testImplementation "io.cucumber:cucumber-spring:${cucumberVersion}"
	testImplementation 'org.junit.vintage:junit-vintage-engine:5.8.2'
	testImplementation group: 'io.qameta.allure', name: 'allure-junit4', version: '2.17.2' //2.17.2
	//testImplementation group: 'io.qameta.allure', name: 'allure-selenide', version: '2.17.2'
	//testImplementation group: 'io.qameta.allure', name: 'allure-assertj', version: '2.17.2'
}

tasks.named('test') {
	useJUnitPlatform()
	ignoreFailures = true
}

configurations {
	cucumberRuntime {
		extendsFrom testImplementation
	}
}

allure {
	autoconfigure = true
	aspectjweaver = true
}

task cucumber() {
	dependsOn assemble, compileTestJava
	doLast {
		javaexec {
			main = "io.cucumber.core.cli.Main"
			classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output
			args = [
					"-p", 'pretty',
//					'--plugin', 'io.qameta.allure.cucumber4jvm.AllureCucumber4Jvm',
					"src/test/resources/features/"
			]
		}
	}
}
